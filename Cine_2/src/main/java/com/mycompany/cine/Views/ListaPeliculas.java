/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.cine.Views;

import com.mycompany.cine.Controller.ConectorDB;
import com.mycompany.cine.Controller.PeliculaController;
import com.mycompany.cine.Model.PeliculaDAO;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mlarr
 */
public class ListaPeliculas extends javax.swing.JPanel {

    /**
     * Creates new form ListaPeliculas
     */
    public ListaPeliculas(ConectorDB conn) {
        this.conector = conn;
        añadirPelicula = new EditorPelicula(conn);
        initComponents();
        cargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        jLabelListaPeliculas = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePeliculas = new javax.swing.JTable();
        jTextFieldBuscar = new javax.swing.JTextField();
        jButtonBuscar = new javax.swing.JButton();
        jButtonAñadir = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        jLabelFiltrar = new javax.swing.JLabel();
        jLabelGenero = new javax.swing.JLabel();
        jCheckBoxFiltrar = new javax.swing.JCheckBox();
        jTextFieldFiltroGenero = new javax.swing.JTextField();
        jLabelAnno = new javax.swing.JLabel();
        jTextFieldAnnoDesde = new javax.swing.JTextField();
        jTextFieldAnnoHasta = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bg.setPreferredSize(new java.awt.Dimension(682, 505));

        jLabelListaPeliculas.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        jLabelListaPeliculas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelListaPeliculas.setText("Lista Peliculas");

        jTablePeliculas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "TITULO", "DIRECTOR", "AÑO", "DURACIÓN", "GÉNERO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablePeliculas);
        if (jTablePeliculas.getColumnModel().getColumnCount() > 0) {
            jTablePeliculas.getColumnModel().getColumn(0).setResizable(false);
            jTablePeliculas.getColumnModel().getColumn(1).setResizable(false);
            jTablePeliculas.getColumnModel().getColumn(2).setResizable(false);
            jTablePeliculas.getColumnModel().getColumn(3).setResizable(false);
            jTablePeliculas.getColumnModel().getColumn(4).setResizable(false);
            jTablePeliculas.getColumnModel().getColumn(5).setResizable(false);
        }

        jTextFieldBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBuscarActionPerformed(evt);
            }
        });
        jTextFieldBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldBuscarKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBuscarKeyTyped(evt);
            }
        });

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jButtonAñadir.setText("Añadir");
        jButtonAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAñadirActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jLabelFiltrar.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabelFiltrar.setText("Filtrar:");

        jLabelGenero.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabelGenero.setText("Género:");

        jCheckBoxFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxFiltrarActionPerformed(evt);
            }
        });

        jTextFieldFiltroGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFiltroGeneroActionPerformed(evt);
            }
        });
        jTextFieldFiltroGenero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldFiltroGeneroKeyTyped(evt);
            }
        });

        jLabelAnno.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabelAnno.setText("Año:");

        jTextFieldAnnoDesde.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldAnnoDesdeKeyTyped(evt);
            }
        });

        jTextFieldAnnoHasta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldAnnoHastaKeyTyped(evt);
            }
        });

        jLabel1.setText("desde");

        jLabel2.setText("Hasta");

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(jButtonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(224, 224, 224)
                        .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jButtonAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelGenero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgLayout.createSequentialGroup()
                                .addGap(0, 1, Short.MAX_VALUE)
                                .addComponent(jLabelAnno, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(bgLayout.createSequentialGroup()
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextFieldFiltroGenero, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                        .addComponent(jTextFieldAnnoDesde)
                                        .addComponent(jTextFieldAnnoHasta))
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(jLabelFiltrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBoxFiltrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabelListaPeliculas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
                            .addComponent(jTextFieldBuscar, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabelListaPeliculas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscar))
                .addGap(12, 12, 12)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelFiltrar)
                            .addComponent(jCheckBoxFiltrar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelGenero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldFiltroGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelAnno, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldAnnoDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldAnnoHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonModificar)
                    .addComponent(jButtonEliminar)
                    .addComponent(jButtonAñadir))
                .addContainerGap())
        );

        add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 505));
    }// </editor-fold>//GEN-END:initComponents

    private void cargarTabla(){
        DefaultTableModel model = (DefaultTableModel) this.jTablePeliculas.getModel();
        PeliculaDAO pelicula = new PeliculaDAO();
        PeliculaController controller = new PeliculaController();
            try{
                controller.listarPeliculaController(pelicula, this.conector.getConn()).forEach((u) -> model.addRow(new Object[]{u.getId(),u.getTitulo(),u.getDirector(),u.getAnno(),u.getDuracion(),u.getGenero()}));

            }catch(SQLException ex){
                Logger.getLogger(ListaPeliculas.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        int id = -1;
        for(int i:jTablePeliculas.getSelectedRows()){
            id = (int) jTablePeliculas.getValueAt(i, 0);
        }
        System.out.println(id);
        this.añadirPelicula.setTitulo("Modificar Pelicula", "Aceptar",2, id);
        if (id == -1) {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar una pelicula", "ERROR", JOptionPane.WARNING_MESSAGE);
            Principal.mostrarPanel(new ListaPeliculas(this.conector));
        }else{
            Principal.mostrarPanel(this.añadirPelicula);
        }
        
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        PeliculaController controller = new PeliculaController();
        DefaultTableModel model = (DefaultTableModel) this.jTablePeliculas.getModel();
        
        for(int i:jTablePeliculas.getSelectedRows()){
            try{
                controller.eliminarPeliculas((int)jTablePeliculas.getValueAt(i, 0),this.conector.getConn());
                model.removeRow(i);
                JOptionPane.showMessageDialog(null, "Se ha eliminado la pelicula", "Exito", JOptionPane.INFORMATION_MESSAGE);
            }catch(SQLException ex){
                    Logger.getLogger(ListaPeliculas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAñadirActionPerformed
        this.añadirPelicula.setTitulo("Nueva Pelicula", "Añadir",1, 0);
        Principal.mostrarPanel(this.añadirPelicula);
    }//GEN-LAST:event_jButtonAñadirActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        PeliculaDAO pelicula = new PeliculaDAO();
        pelicula.setTitulo(this.jTextFieldBuscar.getText());
        DefaultTableModel model = (DefaultTableModel) this.jTablePeliculas.getModel();
        model.getDataVector().removeAllElements();
        PeliculaController controlador = new PeliculaController();
        if(this.jCheckBoxFiltrar.isSelected()){
            if(!this.jTextFieldAnnoDesde.getText().isEmpty() && this.jTextFieldFiltroGenero.getText().isEmpty()){
                if(!this.jTextFieldAnnoHasta.getText().isEmpty()){
                    try {
                        controlador.busquedaPeliculas(pelicula, this.conector.getConn(),true,false,Integer.valueOf(this.jTextFieldAnnoDesde.getText()),Integer.valueOf(this.jTextFieldAnnoHasta.getText()),"").forEach((u)->model.addRow(new Object[]{u.getId(),u.getTitulo(),u.getDirector(),u.getAnno(),u.getDuracion(),u.getGenero()}));
                    } catch (SQLException ex) {
                        Logger.getLogger(ListaPeliculas.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }else{
                     try {
                        controlador.busquedaPeliculas(pelicula, this.conector.getConn(),true,false,Integer.valueOf(this.jTextFieldAnnoDesde.getText()),0,"").forEach((u)->model.addRow(new Object[]{u.getId(),u.getTitulo(),u.getDirector(),u.getAnno(),u.getDuracion(),u.getGenero()}));
                    } catch (SQLException ex) {
                        Logger.getLogger(ListaPeliculas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }else if(!this.jTextFieldFiltroGenero.getText().isEmpty() && this.jTextFieldAnnoDesde.getText().isEmpty()){
                try {
                    controlador.busquedaPeliculas(pelicula, this.conector.getConn(), false, true, 0, 0, this.jTextFieldFiltroGenero.getText()).forEach((u) -> model.addRow(new Object[]{u.getId(), u.getTitulo(), u.getDirector(), u.getAnno(), u.getDuracion(), u.getGenero()}));
                } catch (SQLException ex) {
                    Logger.getLogger(ListaPeliculas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else if(!this.jTextFieldFiltroGenero.getText().isEmpty() && !this.jTextFieldAnnoDesde.getText().isEmpty() && !this.jTextFieldAnnoHasta.getText().isEmpty()){
                try {
                    controlador.busquedaPeliculas(pelicula, this.conector.getConn(), true, true, Integer.valueOf(this.jTextFieldAnnoDesde.getText()), Integer.valueOf(this.jTextFieldAnnoHasta.getText()), this.jTextFieldFiltroGenero.getText()).forEach((u) -> model.addRow(new Object[]{u.getId(), u.getTitulo(), u.getDirector(), u.getAnno(), u.getDuracion(), u.getGenero()}));
                } catch (SQLException ex) {
                    Logger.getLogger(ListaPeliculas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else if(!this.jTextFieldFiltroGenero.getText().isEmpty() && !this.jTextFieldAnnoDesde.getText().isEmpty() && this.jTextFieldAnnoHasta.getText().isEmpty()){
                try {
                    controlador.busquedaPeliculas(pelicula, this.conector.getConn(), true, true, Integer.valueOf(this.jTextFieldAnnoDesde.getText()), 0, this.jTextFieldFiltroGenero.getText()).forEach((u) -> model.addRow(new Object[]{u.getId(), u.getTitulo(), u.getDirector(), u.getAnno(), u.getDuracion(), u.getGenero()}));
                } catch (SQLException ex) {
                    Logger.getLogger(ListaPeliculas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                try {
                    controlador.busquedaPeliculas(pelicula, this.conector.getConn(), false, false, 0, 0, "").forEach((u) -> model.addRow(new Object[]{u.getId(), u.getTitulo(), u.getDirector(), u.getAnno(), u.getDuracion(), u.getGenero()}));
                } catch (SQLException ex) {
                    Logger.getLogger(ListaPeliculas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }else{
            try {
                controlador.busquedaPeliculas(pelicula, this.conector.getConn(),false,false,0,0,"").forEach((u)->model.addRow(new Object[]{u.getId(),u.getTitulo(),u.getDirector(),u.getAnno(),u.getDuracion(),u.getGenero()}));
            } catch (SQLException ex) {
                Logger.getLogger(ListaPeliculas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jTextFieldBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBuscarActionPerformed
     
        
        
    }//GEN-LAST:event_jTextFieldBuscarActionPerformed

    private void jCheckBoxFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxFiltrarActionPerformed
        
    }//GEN-LAST:event_jCheckBoxFiltrarActionPerformed

    private void jTextFieldBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscarKeyPressed
        
    }//GEN-LAST:event_jTextFieldBuscarKeyPressed

    private void jTextFieldBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscarKeyTyped
        if (jTextFieldBuscar.getText().isEmpty()) {
            DefaultTableModel model = (DefaultTableModel) this.jTablePeliculas.getModel();
            model.getDataVector().removeAllElements();
            cargarTabla();
        }
    }//GEN-LAST:event_jTextFieldBuscarKeyTyped

    private void jTextFieldFiltroGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFiltroGeneroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldFiltroGeneroActionPerformed

    private void jTextFieldFiltroGeneroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFiltroGeneroKeyTyped
        if (jTextFieldBuscar.getText().isEmpty() && jTextFieldAnnoDesde.getText().isEmpty() && jTextFieldAnnoHasta.getText().isEmpty()) {
            DefaultTableModel model = (DefaultTableModel) this.jTablePeliculas.getModel();
            model.getDataVector().removeAllElements();
            cargarTabla();
        }
    }//GEN-LAST:event_jTextFieldFiltroGeneroKeyTyped

    private void jTextFieldAnnoDesdeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAnnoDesdeKeyTyped
        if (jTextFieldBuscar.getText().isEmpty() && jTextFieldAnnoDesde.getText().isEmpty() && jTextFieldAnnoHasta.getText().isEmpty()) {
            DefaultTableModel model = (DefaultTableModel) this.jTablePeliculas.getModel();
            model.getDataVector().removeAllElements();
            cargarTabla();
        }
    }//GEN-LAST:event_jTextFieldAnnoDesdeKeyTyped

    private void jTextFieldAnnoHastaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAnnoHastaKeyTyped
        if (jTextFieldBuscar.getText().isEmpty() && jTextFieldAnnoDesde.getText().isEmpty() && jTextFieldAnnoHasta.getText().isEmpty()) {
            DefaultTableModel model = (DefaultTableModel) this.jTablePeliculas.getModel();
            model.getDataVector().removeAllElements();
            cargarTabla();
        }
    }//GEN-LAST:event_jTextFieldAnnoHastaKeyTyped

    protected ConectorDB conector;
    protected Connection conexionOCI;
    private EditorPelicula añadirPelicula;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JButton jButtonAñadir;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JCheckBox jCheckBoxFiltrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelAnno;
    private javax.swing.JLabel jLabelFiltrar;
    private javax.swing.JLabel jLabelGenero;
    private javax.swing.JLabel jLabelListaPeliculas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePeliculas;
    private javax.swing.JTextField jTextFieldAnnoDesde;
    private javax.swing.JTextField jTextFieldAnnoHasta;
    private javax.swing.JTextField jTextFieldBuscar;
    private javax.swing.JTextField jTextFieldFiltroGenero;
    // End of variables declaration//GEN-END:variables
}
